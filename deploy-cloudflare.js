import { execSync } from 'child_process';
import fs from 'fs';

console.log('üöÄ D√©ploiement automatique de Langflow sur Cloudflare Pages');
console.log('=========================================================');

try {
    // V√©rifier que nous sommes dans le bon r√©pertoire
    console.log('[1/8] V√©rification de l\'environnement...');
    if (!fs.existsSync('src/frontend/package.json')) {
        throw new Error('Frontend non trouv√©');
    }
    console.log('‚úÖ Frontend trouv√©');
    
    // Installer les d√©pendances frontend
    console.log('[2/8] Installation des d√©pendances frontend...');
    execSync('cd src/frontend && npm install', { stdio: 'inherit' });
    console.log('‚úÖ D√©pendances install√©es');
    
    // Construire le frontend
    console.log('[3/8] Construction du frontend...');
    execSync('cd src/frontend && npm run build', { stdio: 'inherit' });
    console.log('‚úÖ Frontend construit');
    
    // V√©rifier que le build existe
    console.log('[4/8] V√©rification du build...');
    if (!fs.existsSync('src/frontend/build')) {
        throw new Error('Build frontend non trouv√©');
    }
    console.log('‚úÖ Build frontend trouv√©');
    
    // Installer Wrangler CLI
    console.log('[5/8] Installation de Wrangler CLI...');
    try {
        execSync('wrangler --version', { stdio: 'pipe' });
        console.log('‚úÖ Wrangler CLI d√©j√† install√©');
    } catch {
        console.log('üì¶ Installation de Wrangler CLI...');
        execSync('npm install -g wrangler', { stdio: 'inherit' });
        console.log('‚úÖ Wrangler CLI install√©');
    }
    
    // Cr√©er un script de d√©ploiement
    console.log('[6/8] Cr√©ation du script de d√©ploiement...');
    const deployScript = `#!/bin/bash
echo "üöÄ D√©ploiement sur Cloudflare Pages..."
echo "====================================="

# Se connecter √† Cloudflare
echo "[1/4] Connexion √† Cloudflare..."
wrangler login

# D√©ployer le frontend
echo "[2/4] D√©ploiement du frontend..."
cd src/frontend
wrangler pages deploy build --project-name langflow-frontend

# D√©ployer le backend (Workers)
echo "[3/4] D√©ploiement du backend..."
cd ../..
wrangler deploy

echo "[4/4] ‚úÖ D√©ploiement termin√© !"
echo "üåê Votre application est maintenant en ligne sur Cloudflare !"
`;

    fs.writeFileSync('deploy-cloudflare.sh', deployScript);
    console.log('‚úÖ Script de d√©ploiement cr√©√©');
    
    // Cr√©er un script Windows
    const deployScriptWin = `@echo off
echo üöÄ D√©ploiement sur Cloudflare Pages...
echo =====================================

echo [1/4] Connexion √† Cloudflare...
wrangler login

echo [2/4] D√©ploiement du frontend...
cd src/frontend
wrangler pages deploy build --project-name langflow-frontend

echo [3/4] D√©ploiement du backend...
cd ../..
wrangler deploy

echo [4/4] ‚úÖ D√©ploiement termin√© !
echo üåê Votre application est maintenant en ligne sur Cloudflare !
pause
`;

    fs.writeFileSync('deploy-cloudflare.bat', deployScriptWin);
    console.log('‚úÖ Script Windows cr√©√©');
    
    // Pousser le code sur GitHub
    console.log('[7/8] Pouss√©e du code sur GitHub...');
    execSync('git add .', { stdio: 'inherit' });
    execSync('git commit -m "Add Cloudflare Pages deployment configuration"', { stdio: 'inherit' });
    execSync('git push origin main', { stdio: 'inherit' });
    console.log('‚úÖ Code pouss√© sur GitHub');
    
    console.log('[8/8] ‚úÖ Configuration termin√©e !');
    console.log('\nüåê Prochaines √©tapes :');
    console.log('1. Double-cliquez sur deploy-cloudflare.bat');
    console.log('2. Connectez-vous √† Cloudflare dans le navigateur');
    console.log('3. Attendez 2-3 minutes');
    console.log('4. Votre application sera en ligne !');
    console.log('\nüîó URLs de d√©ploiement :');
    console.log('   Frontend : https://langflow-frontend.pages.dev');
    console.log('   Backend  : https://langflow-backend.workers.dev');
    
} catch (error) {
    console.error('‚ùå Erreur lors du d√©ploiement:', error.message);
    console.log('\nüîß Solutions possibles:');
    console.log('1. V√©rifiez votre connexion internet');
    console.log('2. Assurez-vous que Node.js est install√©');
    console.log('3. V√©rifiez que le frontend est configur√©');
}
