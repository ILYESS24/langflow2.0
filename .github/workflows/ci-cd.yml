name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: src/frontend/package-lock.json
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install frontend dependencies
      working-directory: src/frontend
      run: npm ci
      
    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv sync
        
    - name: Run frontend linting
      working-directory: src/frontend
      run: |
        npm run check-format
        npm run type-check
        
    - name: Run frontend tests
      working-directory: src/frontend
      run: npm run test:coverage
      
    - name: Run backend linting
      run: |
        pip install ruff black isort
        ruff check src/
        black --check src/
        isort --check-only src/
        
    - name: Run backend tests
      run: |
        python -m pytest tests/ -v --cov=src --cov-report=xml
        
    - name: Build frontend
      working-directory: src/frontend
      run: npm run build
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: backend
        name: backend-coverage
        
    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        directory: src/frontend/coverage
        flags: frontend
        name: frontend-coverage

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  deploy:
    needs: [lint-and-test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install Wrangler CLI
      run: npm install -g wrangler
      
    - name: Deploy to Cloudflare Pages
      working-directory: src/frontend
      run: |
        npm ci
        npm run build
        wrangler pages deploy build --project-name langflow-frontend
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        
    - name: Deploy backend functions
      run: |
        wrangler pages deploy src/frontend/functions --project-name langflow-frontend
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
